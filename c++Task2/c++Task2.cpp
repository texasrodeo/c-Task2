// c++Task2.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
////
//Иерархия классов.Необходимо создать классы для описания элементов языка C#:
//пространств имен, классов, полей, методов и свойств классов и т.д.Классы
//принадлежат пространствам имен, в свою очередь каждое пространство имен знает
//список своих классов.Классы могут наследоваться друг от друга.Для классов
//необходимо предусмотреть операцию проверки корректности класса(например,
//    если класс наследуется от абстрактного класса, то он должен перегрузить все
//    абстрактные методы и свойства и т.д.).Интерфейс задачи должен представлять
//    собой навигацию по дереву.Любую сущность можно создать / изменить / удалить.
//    Предусмотреть операцию построения кода шаблона классов(с пустыми методами
//        и свойствами).

#include <iostream>


using namespace std;

void menu(int level) {
    cout << "Меню:" << endl;
    switch (level) {
        case 0:
            cout << "Уровень пространств имен" << endl;
            cout << "1. Просмотреть список пространств имен" << endl;           
            cout << "2. Добавить пространство имен" << endl;
            cout << "3. Редактировать пространство имен" << endl;
            cout << "4. Удалить пространство имен" << endl;
            cout << "5. Перейти к пространству имен" << endl;
            break;
        case 1:
            cout << "Уровень пространства имен" << endl;
            cout << "1. Просмотреть список классов в этом пространстве имен" << endl;
            cout << "2. Добавить класс" << endl;
            cout << "3. Редактировать класс" << endl;
            cout << "4. Удалить класс" << endl;
            cout << "5. Перейти к классу" << endl;
            break;
        case 3:
            cout << "Уровень класса" << endl;
            cout << "1. Просмотреть список свойств и методов в этом классе" << endl;
            cout << "2. Добавить метод" << endl;
            cout << "3. Добавить свойство" << endl;
            cout << "4. Редактировать метод" << endl;
            cout << "5. Редактировать свойство" << endl;
            cout << "6. Удалить метод" << endl;
            cout << "7. Удалить свойство" << endl;
            cout << "8. Перейти к методу" << endl;
            cout << "8. Перейти к свойству" << endl;
            break;
       
       
       
    }
   
}

int main()
{
    int level = 0;
    while (true) {
        menu(level);
    }
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
